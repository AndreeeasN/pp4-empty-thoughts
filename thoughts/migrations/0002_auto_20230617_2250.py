# Generated by Django 3.2.19 on 2023-06-17 20:50

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('thoughts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('text_color', models.CharField(max_length=7)),
                ('bg_color', models.CharField(max_length=7)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='thought',
            options={'ordering': ['-date_created']},
        ),
        migrations.RemoveField(
            model_name='thought',
            name='date',
        ),
        migrations.AddField(
            model_name='thought',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='thought',
            name='date_updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='thought',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='thought_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='thought',
            name='time',
            field=models.TimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='thought',
            name='content',
            field=models.TextField(max_length=280),
        ),
        migrations.AddField(
            model_name='thought',
            name='tags',
            field=models.ManyToManyField(blank=True, to='thoughts.Tag'),
        ),
    ]
